// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`University component Should render without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <University
    loading={false}
    onInputValueChange={[Function]}
    valueList={
        Array [
            Object {
              "alias": "BU",
              "id": 1,
              "name": "Boston University",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Row
          gutter={0}
>
          <Col
                    lg={
                              Object {
                                        "offset": 4,
                                        "span": 16,
                                      }
                    }
                    md={
                              Object {
                                        "offset": 3,
                                        "span": 18,
                                      }
                    }
                    sm={
                              Object {
                                        "offset": 0,
                                        "span": 24,
                                      }
                    }
                    xl={
                              Object {
                                        "offset": 5,
                                        "span": 14,
                                      }
                    }
          >
                    <Search
                              enterButton={true}
                              inputPrefixCls="ant-input"
                              onSearch={[Function]}
                              placeholder="Search by name. e.g. Boston University"
                              prefixCls="ant-input-search"
                    />
          </Col>
</Row>,
        <List
          bordered={false}
          dataSource={
                    Array [
                              Object {
                                "alias": "BU",
                                "id": 1,
                                "name": "Boston University",
                              },
                            ]
          }
          itemLayout="vertical"
          loading={false}
          pagination={false}
          prefixCls="ant-list"
          renderItem={[Function]}
          size="large"
          split={true}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col
            lg={
                        Object {
                                    "offset": 4,
                                    "span": 16,
                                  }
            }
            md={
                        Object {
                                    "offset": 3,
                                    "span": 18,
                                  }
            }
            sm={
                        Object {
                                    "offset": 0,
                                    "span": 24,
                                  }
            }
            xl={
                        Object {
                                    "offset": 5,
                                    "span": 14,
                                  }
            }
>
            <Search
                        enterButton={true}
                        inputPrefixCls="ant-input"
                        onSearch={[Function]}
                        placeholder="Search by name. e.g. Boston University"
                        prefixCls="ant-input-search"
            />
</Col>,
          "gutter": 0,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Search
              enterButton={true}
              inputPrefixCls="ant-input"
              onSearch={[Function]}
              placeholder="Search by name. e.g. Boston University"
              prefixCls="ant-input-search"
/>,
            "lg": Object {
              "offset": 4,
              "span": 16,
            },
            "md": Object {
              "offset": 3,
              "span": 18,
            },
            "sm": Object {
              "offset": 0,
              "span": 24,
            },
            "xl": Object {
              "offset": 5,
              "span": 14,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "enterButton": true,
              "inputPrefixCls": "ant-input",
              "onSearch": [Function],
              "placeholder": "Search by name. e.g. Boston University",
              "prefixCls": "ant-input-search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bordered": false,
          "dataSource": Array [
            Object {
              "alias": "BU",
              "id": 1,
              "name": "Boston University",
            },
          ],
          "itemLayout": "vertical",
          "loading": false,
          "pagination": false,
          "prefixCls": "ant-list",
          "renderItem": [Function],
          "size": "large",
          "split": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Row
            gutter={0}
>
            <Col
                        lg={
                                    Object {
                                                "offset": 4,
                                                "span": 16,
                                              }
                        }
                        md={
                                    Object {
                                                "offset": 3,
                                                "span": 18,
                                              }
                        }
                        sm={
                                    Object {
                                                "offset": 0,
                                                "span": 24,
                                              }
                        }
                        xl={
                                    Object {
                                                "offset": 5,
                                                "span": 14,
                                              }
                        }
            >
                        <Search
                                    enterButton={true}
                                    inputPrefixCls="ant-input"
                                    onSearch={[Function]}
                                    placeholder="Search by name. e.g. Boston University"
                                    prefixCls="ant-input-search"
                        />
            </Col>
</Row>,
          <List
            bordered={false}
            dataSource={
                        Array [
                                    Object {
                                      "alias": "BU",
                                      "id": 1,
                                      "name": "Boston University",
                                    },
                                  ]
            }
            itemLayout="vertical"
            loading={false}
            pagination={false}
            prefixCls="ant-list"
            renderItem={[Function]}
            size="large"
            split={true}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col
              lg={
                            Object {
                                          "offset": 4,
                                          "span": 16,
                                        }
              }
              md={
                            Object {
                                          "offset": 3,
                                          "span": 18,
                                        }
              }
              sm={
                            Object {
                                          "offset": 0,
                                          "span": 24,
                                        }
              }
              xl={
                            Object {
                                          "offset": 5,
                                          "span": 14,
                                        }
              }
>
              <Search
                            enterButton={true}
                            inputPrefixCls="ant-input"
                            onSearch={[Function]}
                            placeholder="Search by name. e.g. Boston University"
                            prefixCls="ant-input-search"
              />
</Col>,
            "gutter": 0,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Search
                enterButton={true}
                inputPrefixCls="ant-input"
                onSearch={[Function]}
                placeholder="Search by name. e.g. Boston University"
                prefixCls="ant-input-search"
/>,
              "lg": Object {
                "offset": 4,
                "span": 16,
              },
              "md": Object {
                "offset": 3,
                "span": 18,
              },
              "sm": Object {
                "offset": 0,
                "span": 24,
              },
              "xl": Object {
                "offset": 5,
                "span": 14,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "enterButton": true,
                "inputPrefixCls": "ant-input",
                "onSearch": [Function],
                "placeholder": "Search by name. e.g. Boston University",
                "prefixCls": "ant-input-search",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bordered": false,
            "dataSource": Array [
              Object {
                "alias": "BU",
                "id": 1,
                "name": "Boston University",
              },
            ],
            "itemLayout": "vertical",
            "loading": false,
            "pagination": false,
            "prefixCls": "ant-list",
            "renderItem": [Function],
            "size": "large",
            "split": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
