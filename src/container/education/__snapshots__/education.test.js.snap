// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Education container Should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Education)
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "keyword": "",
      "loading": false,
      "metaData": Object {
        "page": 0,
        "per_page": 20,
        "total": 0,
      },
      "onInputValueChange": [Function],
      "onPageChange": [Function],
      "onUniversitySelected": [Function],
      "selectedUniversityId": undefined,
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "universityList": Array [
        Object {
          "alias": "FU",
          "id": 1,
          "name": "First Unviersity",
        },
        Object {
          "alias": "SU",
          "id": 2,
          "name": "Second University",
        },
        Object {
          "alias": "TU",
          "id": 3,
          "name": "Third University",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "keyword": "",
        "loading": false,
        "metaData": Object {
          "page": 0,
          "per_page": 20,
          "total": 0,
        },
        "onInputValueChange": [Function],
        "onPageChange": [Function],
        "onUniversitySelected": [Function],
        "selectedUniversityId": undefined,
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "universityList": Array [
          Object {
            "alias": "FU",
            "id": 1,
            "name": "First Unviersity",
          },
          Object {
            "alias": "SU",
            "id": 2,
            "name": "Second University",
          },
          Object {
            "alias": "TU",
            "id": 3,
            "name": "Third University",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
